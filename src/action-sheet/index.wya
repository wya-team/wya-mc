<template>
	<wxs src="../wxs/array.wxs" module="tools" />
	<mc-popup 
		mc-class="mc-action-sheet mc-class" 
		visible="{{ visible }}" 
		round="{{ round }}"
		mask="{{ mask }}"
		maskClosable="{{ maskClosable }}"
		maskStyle="{{ maskStyle }}"
		bind:close="handleClose"
	>
		<view 
			wx:if="{{ title }}" 
			class="mc-hairline__bottom mc-action-sheet__title"
			style=""
		>
			{{ title }}
		</view>
		<view wx:if="{{ description }}" class="mc-action-sheet__description">
			{{ description }}
		</view>
		<button
			wx:for="{{ actions }}"
			wx:key="index"
			open-type="{{ item.openType }}"
			style="{{ item.color ? 'color: ' + item.color : '' }}"
			class="mc-action-sheet__item {{item.disabled ? 'is-disabled' : ''}} {{index === 0 && title ? '' : 'mc-hairline__top' }} {{ item.className || '' }}"
			hover-class="mc-action-sheet__item--hover"
			data-index="{{ index }}"
			bindtap="handleSelect"
			bindgetuserinfo="bindGetUserInfo"
			bindcontact="bindContact"
			bindgetphonenumber="bindGetPhoneNumber"
			binderror="bindError"
			bindlaunchapp="bindLaunchApp"
			bindopensetting="bindOpenSetting"
			lang="{{ lang }}"
			session-from="{{ sessionFrom }}"
			send-message-title="{{ sendMessageTitle }}"
			send-message-path="{{ sendMessagePath }}"
			send-message-img="{{ sendMessageImg }}"
			show-message-card="{{ showMessageCard }}"
			app-parameter="{{ appParameter }}"
		>
			<view>
				<text>{{ item.name }}</text>
			</view>
			<!-- TODO: 存在问题，无法组织冒泡(button -> view可行，但原生事件不行) -->
			<block
				wx:if="{{ tools.isArray(item.extra) }}"
			>
				<view 
					wx:for="{{ item.extra }}"
					wx:for-index="$index"
					wx:for-item="$item"
					wx:key="$index"
					data-indexes="{{ index }}_{{ $index }}"
					catchtap="handleExtra"
					class="mc-action-sheet__extra"
				>
					{{ $item.name }}
				</view>
			</block>
			<view wx:elif="{{ item.subname }}" class="mc-action-sheet__subname">
				<text>{{ item.subname }}</text>
			</view>
		</button>
		<slot></slot>
		<view
			wx:if="{{ cancelText }}"
			class="mc-action-sheet__cancel"
			hover-class="mc-action-sheet__cancel--hover"
			hover-stay-time="70"
			bind:tap="handleCancel"
		>
			{{ cancelText }}
		</view>
	</mc-popup>
</template>
<script>
import McComponent from '../common/component';
import { openType } from '../mixins/open-type';
import { button } from '../mixins/button';
import { popup } from '../mixins/popup';

McComponent({
	mixins: [button, openType, popup],
	props: {
		visible: {
			type: Boolean,
			value: false
		},
		cancelText: {
			type: String,
			value: '取消'
		},
		title: String,
		description: String,
		actions: {
			type: Array,
			value: []
		},
		closeOnClickAction: {
			type: Boolean,
			value: true
		}
	},
	methods: {
		onPortalUpdate(options = {}) {
			this.setData({
				actions: options.actions || this.data.actions,
				cancelText: options.cancelText || this.data.cancelText,
				title: options.title || this.data.title,
				description: options.description || this.data.description,
				closeOnClickAction: options.closeOnClickAction || this.data.closeOnClickAction,
			});

			this.onBeforeSure = options.onBeforeSure || (() => true);
			this.onBeforeClose = options.onBeforeClose || (() => true);
		},
		async handleClose() {
			let allow = await this.onBeforeClose(this);
			if (typeof allow === 'boolean' && !allow) return;

			this.$emit('close');
		},
		handleCancel() {
			this.$emit('cancel');
			this.handleClose();
		},
		async handleSelect(event) {
			let index = event.currentTarget.dataset.index;
			let item = this.data.actions[index];
			if (item && !item.disabled) {
				let allow = await this.onBeforeSure(this);
				if (typeof allow === 'boolean' && !allow) return;
				item.onClick && item.onClick(item, this);

				// TODO: 这里可能存在bug, sure的时候会关闭弹窗
				this.$emit('sure', item);
				this.$emit('select', item);

				if (this.data.closeOnClickAction) {
					this.handleClose();
				}
			}
		},

		handleExtra(event) {
			let { indexes } = event.currentTarget.dataset;
			let [index, $index] = indexes.split('_');
			const item = this.data.actions[index].extra[$index];
			item.onClick && item.onClick(item, this);
		}
	}
});

</script>
<style lang="scss">
@import '../common/index.scss';

.mc-action-sheet {
	max-height: 90% !important;
	color: #000000;
	font-family:PingFang SC;
	.mc-action-sheet__title {
		text-align: center;
		font-size: 38rpx;
		line-height: 100rpx;
	}
	.mc-action-sheet__description {
		text-align: center;
		padding: 32rpx;
		color: #646566;
		font-size: 28rpx;
		line-height: 40rpx;
	}
	.mc-action-sheet__cancel,
	.mc-action-sheet__item {
		font-weight: normal;
		font-size: 36rpx;
		line-height: 100rpx;
		background-color: #fff;
		width: 100%;
		box-shadow: border-box;
		padding: 0;
		display: flex;
		align-items: center;
		justify-content: center;
		&.is-disabled {
			color: #CDCDCD;
			background-color: #fff;
		}
	}
	.mc-action-sheet__cancel--hover,
	.mc-action-sheet__item--hover {
		background-color: #f2f3f5;
	}
	.mc-action-sheet__cancel:before {
		display: block;
		content: " ";
		height: 10rpx;
		background-color: #F2F2F2;
	}
	.mc-action-sheet__subname {
		margin-left: 8rpx;
		font-size: 24rpx;
		color: #646566;
	}

	.mc-action-sheet__extra {
		margin-left: 15rpx;
		color: #4787F2;
	}
	button:after {
		display: block
	}
}
</style>
<config>
{
	"component": true,
	"usingComponents": {
		"mc-popup": "../popup/index"
	}
}
</config>
