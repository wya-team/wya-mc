<template>
	<mc-popup 
		mc-class="mc-picker-popup" 
		mask-style="{{ maskStyle }}" 
		visible="{{visible}}" 
		hideTabBar="{{ hideTabBar }}"
		bind:close="handleCancel"
	>
		<view wx:if="{{showToolbar}}" class="mc-picker-popup__header">
			<view 
				wx:if="{{cancelText}}" 
				class="mc-picker-popup__item is-left"
				bindtap="handleCancel"
			>
				{{ cancelText }}
			</view>

			<!-- title -->
			<view class="mc-picker-popup__item is-title">
				{{title}}
			</view>

			<view 
				wx:if="{{okText}}" 
				class="mc-picker-popup__item is-right" 
				bindtap="handleOK"
			>
				{{ okText }}
			</view>
		</view>
		<slot></slot>
	</mc-popup>
</template>
<script>
import McComponent from '../common/component';
import { pickerPopupProps } from './props';

McComponent({
	props: {
		...pickerPopupProps,
		visible: {
			type: Boolean,
			value: false
		},
	},
	methods: {
		onPortalUpdate(options = {}) {
			this.onBeforeSure = options.onBeforeSure || (() => true);
			this.onBeforeClose = options.onBeforeClose || (() => true);
		},
		handleClose() {
			this.$emit('close');
		},
		async handleCancel() {
			const result = await this.onBeforeClose();
			if (result) {
				this.$emit('cancel');
				this.handleClose();
			}
		},
		async handleOK() {
			const result = await this.onBeforeSure();
			if (result) {
				this.$emit('sure');
				this.$emit('ok');
				this.handleClose();
			}
		},
	}
});

</script>
<style lang="scss">
@import '../common/index.scss';

.mc-picker-popup {
	.mc-picker-popup__header {
		position: relative;
		display: flex;
		align-items: center;
		box-sizing: border-box;
		background-color: #fff;
	}
	.mc-picker-popup__item {
		padding: 0 30rpx;
		color: #108ee9;
		height: 88rpx;
		font-size: 34rpx;
		line-height: 88rpx;
		text-align: center;
		&.is-title {
			flex: 1;
			text-align: center;
			color: #000;
		}
	}
}
</style>
<config>
{
	"component": true,
	"usingComponents": {
		"mc-popup": "../popup/index"
	}
}
</config>
