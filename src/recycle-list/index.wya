<template>
	<movable-area class="mc-recycle-list mc-class" style="height: {{ height }}">
		<movable-view 
			class="mc-recycle-list__scroll"
			style="height: calc(100% + {{ refreshHeight }}rpx);"
			direction="vertical"
			y="{{ y }}"
			disabled="{{ disabled }}"
			bind:change="handleMoveChange"
			bind:touchend="handleTouchEnd"
		>
			<recycle-list-core
				class="mc-recycle-list__view"
				mc-class="core-class"
				pull-up-class="pull-up-class"
				show="{{ show }}"
				total="{{ total }}"
				current="{{ current }}"
				scroll="{{ scroll }}"
				showScrollStatus="{{ showScrollStatus }}"
				disabled="{{ disabled }}"
				scrollTop="{{ scrollTop }}"
				lower-threshold="{{ lowerThreshold }}"
				listen-scroll="{{ listenScroll }}"
				height="100%"
				bind:ready="handleCoreReady"
				bind:loadData="handleLoadData"
				bind:scroll="handleScroll"
			>
				<view 
					wx:if="{{ pull }}"
					id="mc-refresh-view"
					class="mc-recycle-list__pull-down pull-down-class" 
					style="height: {{ refreshHeight }}rpx;"
				>
					<text class="mc-recycle-list__text">{{ PULL_DOWN_STATUS[pullDownStatus] }}</text>
				</view>

				<slot />
				<slot slot="extra" name="extra" />
			</recycle-list-core>
		</movable-view>
	</movable-area>
</template>
<script>
import McComponent from '../common/component';
import { PULL_DOWN_STATUS } from './constant';
import { coreProps } from './props';

McComponent({
	externalClasses: ['pull-down-class', 'pull-up-class', 'core-class'],
	props: {
		...coreProps,
		pauseY: {
			type: Number,
			value: -10
		},
		refreshHeight: {
			type: Number,
			value: 120,

		},
		pull: {
			type: Boolean,
			value: true
		},
	},
	data: {
		y: -60,
		refreshOffset: 0, // 下拉刷新视图高度
		isInited: false,
		/**
		 * 0.未touchstart 
		 * 1.pulling但未达到pauseY 
		 * 2.pulling达到pauseY 
		 * 3.进入pause状态 （loading）
		 */
		pullDownStatus: 0,
		PULL_DOWN_STATUS,
	},
	lifetimes: {
		ready() {
			this.isReady = true;
			this.init();
		},
		detached() {
			
		},
	},
	observers: {
		'show': function (show) {
			if (show) this.init();
		},
		'refreshHeight': function (refreshHeight) {
			setTimeout(() => this.init(true), 10);
		}
	},
	methods: {
		/**
		 * 初始化scroll组件参数, 动态获取 下拉刷新区域
		 */
		init(force) {
			if (!this.data.pull) {
				this.setData({ y: 0 });
				return;
			}
			if (!this.isReady || !this.data.show || (this.data.isInited && !force)) return;
			this.createSelectorQuery().select("#mc-refresh-view").boundingClientRect((res) => {
				const height = -res.height;
				this.setData({
					refreshOffset: height,
					y: height,
					isInited: height > 0
				});
			}).exec();
		},
		handleCoreReady(e) {
			this.coreInstance = e.detail;
		},
		handleMoveChange(e) {
			const { pullDownStatus, pauseY } = this.data;
			const { scrollStatus } = this.coreInstance.data;
			let diff = e.detail.y;
			if (!this.data.pull || pullDownStatus >= 3 || scrollStatus == 1) return;
			if (diff > pauseY) {
				this.setData({ pullDownStatus: 2 });
			} else {
				this.setData({ pullDownStatus: 1 });
			}
		},
		handleTouchEnd() {
			const { pullDownStatus, refreshOffset } = this.data;
			if (pullDownStatus >= 3) return;
			if (pullDownStatus === 2) {
				wx.vibrateShort();
				this.setData({
					pullDownStatus: 3,
					y: 0,
				});
				this.handleRefresh();
			} else if (pullDownStatus === 1) {
				this.setData({ y: refreshOffset });
			}
		},
		handleRefresh() {
			this.$emit('loadData', { 
				page: 1, 
				refresh: true, 
				done: () => {
					let scrollStatus = this.data.total <= 1 ? 2 : 0;
					this.setData({
						pullDownStatus: 0,
						y: this.data.refreshOffset,
					});
					this.coreInstance.setData({
						scrollStatus,
						currentPage: 1
					});
				}
			});
		},
		handleLoadData(e) {
			const { page, done } = e.detail;
			this.$emit('loadData', { page, refresh: false, done });
		},
		handleScroll(e) {
			if (this.data.listenScroll) {
				this.$emit('scroll', e.detail);
			}
		}
	}
});
</script>
<style lang="scss">
.mc-recycle-list {
	width: 100%;
	height: 100vh;
	overflow: hidden;
	.mc-recycle-list__scroll {
		width: 100%;
	}
	.mc-recycle-list__pull-down {
		font-size: 12rpx;
		display: flex;
		align-items: center;
		justify-content: center;
		overflow: hidden;
		.mc-recycle-list__text {
			color: #333;
			line-height: 60rpx;
			font-size: 24rpx;
		}
	}
}
</style>
<config>
{
	"component": true,
	"usingComponents": {
		"recycle-list-core": "./core"
	}
}
</config>
